{"ast":null,"code":"import _objectSpread from \"/var/www/html/api_syfea/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/var/www/html/api_syfea/admin/src/App.js\";\nimport React from 'react';\nimport { RichTextField } from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { HydraAdmin, hydraClient, fetchHydra as baseFetchHydra } from '@api-platform/admin';\nimport authProvider from './authProvider';\nimport parseHydraDocumentation from '@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation';\nimport { Route, Redirect } from 'react-router-dom';\nconst entrypoint = 'http://www.apisyfea.local';\n\nconst myApiDocumentationParser = entrypoint => parseHydraDocumentation(entrypoint).then(({\n  api\n}) => {\n  const articles = api.resources.find(({\n    name\n  }) => 'articles' === name);\n  const content = articles.fields.find(f => 'content' === f.name);\n\n  content.field = props => React.createElement(RichTextField, Object.assign({}, props, {\n    source: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n\n  content.input = props => React.createElement(RichTextInput, Object.assign({}, props, {\n    source: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n\n  content.input.defaultProps = {\n    addField: true,\n    addLabel: true\n  };\n  return {\n    api\n  };\n});\n\nconst fetchHeaders = {\n  'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n};\n\nconst fetchHydra = (url, options = {}) => baseFetchHydra(url, _objectSpread({}, options, {\n  headers: new Headers(fetchHeaders)\n}));\n\nconst dataProvider = api => hydraClient(api, fetchHydra);\n\nconst apiDocumentationParser = entrypoint => parseHydraDocumentation(entrypoint, {\n  headers: new Headers(fetchHeaders)\n}).then(({\n  api\n}) => ({\n  api\n}), result => {\n  const api = result.api,\n        status = result.status;\n\n  if (status === 401) {\n    return Promise.resolve({\n      api,\n      status,\n      customRoutes: [React.createElement(Route, {\n        path: \"/\",\n        render: () => React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })]\n    });\n  }\n\n  return Promise.reject(result);\n});\n\nexport default (props => React.createElement(HydraAdmin, {\n  apiDocumentationParser: myApiDocumentationParser,\n  entrypoint: entrypoint,\n  authProvider: authProvider,\n  dataProvider: dataProvider,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/var/www/html/api_syfea/admin/src/App.js"],"names":["React","RichTextField","RichTextInput","HydraAdmin","hydraClient","fetchHydra","baseFetchHydra","authProvider","parseHydraDocumentation","Route","Redirect","entrypoint","myApiDocumentationParser","then","api","articles","resources","find","name","content","fields","f","field","props","input","defaultProps","addField","addLabel","fetchHeaders","localStorage","getItem","url","options","headers","Headers","dataProvider","apiDocumentationParser","result","status","Promise","resolve","customRoutes","reject"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { RichTextField } from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { HydraAdmin, hydraClient, fetchHydra as baseFetchHydra } from '@api-platform/admin';\nimport authProvider from './authProvider';\nimport parseHydraDocumentation from '@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation';\nimport { Route, Redirect } from 'react-router-dom';\n\n\nconst entrypoint = 'http://www.apisyfea.local';\n\nconst myApiDocumentationParser = entrypoint => parseHydraDocumentation(entrypoint)\n    .then( ({ api }) => {\n        const articles = api.resources.find(({ name }) => 'articles' === name);\n        const content = articles.fields.find(f => 'content' === f.name);\n\n        content.field = props => (\n            <RichTextField {...props} source=\"content\" />\n    );\n\n        content.input = props => (\n            <RichTextInput {...props} source=\"content\" />\n    );\n\n        content.input.defaultProps = {\n            addField: true,\n            addLabel: true\n        };\n\n        return { api };\n    })\n;\n\nconst fetchHeaders = {'Authorization': `Bearer ${localStorage.getItem('token')}`};\nconst fetchHydra = (url, options = {}) => baseFetchHydra(url, {\n    ...options,\n    headers: new Headers(fetchHeaders),\n});\nconst dataProvider = api => hydraClient(api, fetchHydra);\nconst apiDocumentationParser = entrypoint =>\n    parseHydraDocumentation(entrypoint, {\n        headers: new Headers(fetchHeaders),\n    }).then(\n        ({ api }) => ({ api }),\n        result => {\n            const { api, status } = result;\n\n            if (status === 401) {\n                return Promise.resolve({\n                    api,\n                    status,\n                    customRoutes: [\n                        <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />,\n                    ],\n                });\n            }\n\n            return Promise.reject(result);\n        }\n    );\n\nexport default (props) => <HydraAdmin apiDocumentationParser={myApiDocumentationParser} entrypoint={entrypoint} authProvider={authProvider} dataProvider={dataProvider}/>;"]},"metadata":{},"sourceType":"module"}