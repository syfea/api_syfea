{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _Parameter = require(\"../Parameter\");\n\nvar _Parameter2 = _interopRequireDefault(_Parameter);\n\nvar _fetchResource = require(\"./fetchResource\");\n\nvar _fetchResource2 = _interopRequireDefault(_fetchResource);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (api) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var promises = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var resource = _step.value;\n      var promise = (0, _fetchResource2.default)(resource.url, options).then(function (_ref) {\n        var _ref$parameters = _ref.parameters,\n            parameters = _ref$parameters === undefined ? [] : _ref$parameters;\n        var resourceParameters = [];\n        parameters.forEach(function (_ref2) {\n          var _ref2$property = _ref2.property,\n              property = _ref2$property === undefined ? null : _ref2$property,\n              required = _ref2.required,\n              variable = _ref2.variable;\n\n          if (null === property) {\n            return;\n          }\n\n          var _ref3 = resource.fields.find(function (_ref4) {\n            var name = _ref4.name;\n            return property === name;\n          }) || {},\n              _ref3$range = _ref3.range,\n              range = _ref3$range === undefined ? null : _ref3$range;\n\n          resourceParameters.push(new _Parameter2.default(variable, range, required, \"\"));\n        });\n        return resourceParameters;\n      });\n      promises.push(promise);\n    };\n\n    for (var _iterator = (0, _getIterator3.default)(api.resources), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return _promise2.default.all(promises).then(function (values) {\n    api.resources.map(function (resource, index) {\n      resource.parameters = values[index];\n    });\n    return api;\n  });\n};","map":null,"metadata":{},"sourceType":"script"}