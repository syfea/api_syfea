{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _Api = _interopRequireDefault(require(\"@api-platform/api-doc-parser/lib/Api\"));\n\nvar _Resource = _interopRequireDefault(require(\"@api-platform/api-doc-parser/lib/Resource\"));\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar hasIdentifier = function hasIdentifier(fields) {\n  return undefined !== fields.find(function (_ref) {\n    var id = _ref.id;\n    return 'http://schema.org/identifier' === id;\n  });\n};\n\nvar resolveProps = function resolveProps(props) {\n  var options = props.options;\n  var defaultFieldFactory = options.fieldFactory,\n      resource = options.resource;\n  var customFields = resource.showFields,\n      defaultFields = resource.readableFields,\n      _resource$showProps = resource.showProps,\n      showProps = _resource$showProps === void 0 ? {} : _resource$showProps;\n  var _showProps$options = showProps.options;\n  _showProps$options = _showProps$options === void 0 ? {} : _showProps$options;\n  var customFieldFactory = _showProps$options.fieldFactory;\n  return (0, _objectSpread2.default)({}, props, showProps, {\n    options: (0, _objectSpread2.default)({}, options, {\n      fields: customFields || defaultFields.filter(function (_ref2) {\n        var deprecated = _ref2.deprecated;\n        return !deprecated;\n      }),\n      fieldFactory: customFieldFactory || defaultFieldFactory\n    })\n  });\n};\n\nvar Show = function Show(props) {\n  var _resolveProps = resolveProps(props),\n      _resolveProps$options = _resolveProps.options,\n      api = _resolveProps$options.api,\n      fieldFactory = _resolveProps$options.fieldFactory,\n      fields = _resolveProps$options.fields,\n      resource = _resolveProps$options.resource,\n      _resolveProps$addIdFi = _resolveProps.addIdField,\n      addIdField = _resolveProps$addIdFi === void 0 ? false === hasIdentifier(fields) : _resolveProps$addIdFi;\n\n  return _react.default.createElement(_reactAdmin.Show, props, _react.default.createElement(_reactAdmin.SimpleShowLayout, null, addIdField && _react.default.createElement(_reactAdmin.TextField, {\n    source: \"id\"\n  }), fields.map(function (field) {\n    return fieldFactory(field, {\n      api: api,\n      resource: resource\n    });\n  })));\n};\n\nShow.propTypes = {\n  addIdField: _propTypes.default.bool,\n  options: _propTypes.default.shape({\n    api: _propTypes.default.instanceOf(_Api.default).isRequired,\n    fieldFactory: _propTypes.default.func.isRequired,\n    resource: _propTypes.default.instanceOf(_Resource.default).isRequired,\n    showProps: _propTypes.default.object\n  })\n};\nvar _default = Show;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}