{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactAdmin = require(\"react-admin\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction guessType(parameter, apiPlatform) {\n  var type = guessTypeForApiPlatform(parameter, apiPlatform);\n  return type !== undefined ? type : guessTypeFromRange(parameter.range);\n}\n\nfunction guessTypeForApiPlatform(parameter) {\n  var apiPlatform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (apiPlatform) {\n    // List filters are discarded because there is no built-in filter component in react-admin that can handle this case.\n    if (parameter.variable.match(/.*\\[\\]/i)) return null; // Order filters are discaded because it is only used to know if a column should be sortable or not.\n\n    if (parameter.variable.match(/^order\\[.+\\]$/)) return null;\n    if (parameter.variable.match(/.*\\[between\\]/i) !== null) return 'between';\n  }\n}\n\nfunction guessTypeFromRange(range) {\n  switch (range) {\n    case 'http://www.w3.org/2001/XMLSchema#integer':\n    case 'http://www.w3.org/2001/XMLSchema#float':\n      return 'number';\n\n    case 'http://www.w3.org/2001/XMLSchema#boolean':\n      return 'nullableBoolean';\n\n    case 'http://www.w3.org/2001/XMLSchema#dateTime':\n      return 'date';\n\n    default:\n      return 'text';\n  }\n}\n\nvar _default = function _default(parameter, options) {\n  var type = guessType(parameter, options.apiPlatform);\n\n  switch (type) {\n    case 'date':\n      return _react.default.createElement(_reactAdmin.DateInput, (0, _extends2.default)({\n        key: parameter.variable,\n        source: parameter.variable\n      }, options));\n\n    case 'nullableBoolean':\n      return _react.default.createElement(_reactAdmin.NullableBooleanInput, (0, _extends2.default)({\n        key: parameter.variable,\n        source: parameter.variable\n      }, options));\n    // TODO : create a dedicated Input\n\n    case 'between':\n      return null;\n\n    case 'number':\n      return _react.default.createElement(_reactAdmin.NumberInput, (0, _extends2.default)({\n        key: parameter.variable,\n        source: parameter.variable\n      }, options));\n\n    case 'text':\n      return _react.default.createElement(_reactAdmin.TextInput, (0, _extends2.default)({\n        key: parameter.variable,\n        source: parameter.variable\n      }, options));\n\n    default:\n  }\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}