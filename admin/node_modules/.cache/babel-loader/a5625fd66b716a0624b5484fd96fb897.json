{"ast":null,"code":"var _jsxFileName = \"/var/www/html/api_syfea/admin/src/App.js\";\nimport React from 'react';\nimport authProvider from './authProvider';\nimport { RichTextField } from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { HydraAdmin } from '@api-platform/admin';\nimport parseHydraDocumentation from '@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation';\nconst entrypoint = 'http://www.apisyfea.local';\n\nconst myApiDocumentationParser = entrypoint => parseHydraDocumentation(entrypoint).then(({\n  api\n}) => {\n  const articles = api.resources.find(({\n    name\n  }) => 'articles' === name);\n  const content = articles.fields.find(f => 'content' === f.name);\n\n  content.field = props => React.createElement(RichTextField, Object.assign({}, props, {\n    source: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n\n  content.input = props => React.createElement(RichTextInput, Object.assign({}, props, {\n    source: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n\n  content.input.defaultProps = {\n    addField: true,\n    addLabel: true\n  };\n  return {\n    api\n  };\n});\n\nconst App = () => React.createElement(Admin, {\n  authProvider: authProvider,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"...\");\n\nexport default (props => React.createElement(HydraAdmin, {\n  apiDocumentationParser: myApiDocumentationParser,\n  entrypoint: entrypoint,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/var/www/html/api_syfea/admin/src/App.js"],"names":["React","authProvider","RichTextField","RichTextInput","HydraAdmin","parseHydraDocumentation","entrypoint","myApiDocumentationParser","then","api","articles","resources","find","name","content","fields","f","field","props","input","defaultProps","addField","addLabel","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,uBAAP,MAAoC,gEAApC;AAGA,MAAMC,UAAU,GAAG,2BAAnB;;AAEA,MAAMC,wBAAwB,GAAGD,UAAU,IAAID,uBAAuB,CAACC,UAAD,CAAvB,CAC1CE,IAD0C,CACpC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAChB,QAAMC,QAAQ,GAAGD,GAAG,CAACE,SAAJ,CAAcC,IAAd,CAAmB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc,eAAeA,IAAhD,CAAjB;AACA,QAAMC,OAAO,GAAGJ,QAAQ,CAACK,MAAT,CAAgBH,IAAhB,CAAqBI,CAAC,IAAI,cAAcA,CAAC,CAACH,IAA1C,CAAhB;;AAEAC,EAAAA,OAAO,CAACG,KAAR,GAAgBC,KAAK,IACjB,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,IAAA,MAAM,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AAIAJ,EAAAA,OAAO,CAACK,KAAR,GAAgBD,KAAK,IACjB,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,IAAA,MAAM,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AAIAJ,EAAAA,OAAO,CAACK,KAAR,CAAcC,YAAd,GAA6B;AACzBC,IAAAA,QAAQ,EAAE,IADe;AAEzBC,IAAAA,QAAQ,EAAE;AAFe,GAA7B;AAKA,SAAO;AAAEb,IAAAA;AAAF,GAAP;AACH,CAnB0C,CAA/C;;AAsBA,MAAMc,GAAG,GAAG,MACR,oBAAC,KAAD;AAAO,EAAA,YAAY,EAAEtB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;;AAMA,gBAAgBiB,KAAD,IAAW,oBAAC,UAAD;AAAY,EAAA,sBAAsB,EAAEX,wBAApC;AAA8D,EAAA,UAAU,EAAED,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B","sourcesContent":["import React from 'react';\nimport authProvider from './authProvider';\nimport { RichTextField } from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport { HydraAdmin } from '@api-platform/admin';\nimport parseHydraDocumentation from '@api-platform/api-doc-parser/lib/hydra/parseHydraDocumentation';\n\n\nconst entrypoint = 'http://www.apisyfea.local';\n\nconst myApiDocumentationParser = entrypoint => parseHydraDocumentation(entrypoint)\n    .then( ({ api }) => {\n        const articles = api.resources.find(({ name }) => 'articles' === name);\n        const content = articles.fields.find(f => 'content' === f.name);\n\n        content.field = props => (\n            <RichTextField {...props} source=\"content\" />\n    );\n\n        content.input = props => (\n            <RichTextInput {...props} source=\"content\" />\n    );\n\n        content.input.defaultProps = {\n            addField: true,\n            addLabel: true\n        };\n\n        return { api };\n    })\n;\n\nconst App = () => (\n    <Admin authProvider={authProvider}>\n...\n</Admin>\n);\n\nexport default (props) => <HydraAdmin apiDocumentationParser={myApiDocumentationParser} entrypoint={entrypoint}/>;"]},"metadata":{},"sourceType":"module"}